require('dotenv').config();
const express = require('express');
const morgan = require('morgan');
const cors = require('cors');
const helmet = require('helmet');
const {
  NODE_ENV
} = require('./config');

const app = express();

const morganOption = 'common';
// NODE_ENV === 'production'
//   ? 'tiny'
//   : 'common';
const messageRouter = require('./message/message-router');
const inventoryRouter = require('./inventory/inventory-router');
// const router = require('./user/user-router');
const listRouter = require('./list/list-router');
const forsaleRouter = require('./forsale/forsale-router');

app.use(morgan(morganOption));
app.use(helmet());
app.use(cors());
app.get('/', (req, res) => {
  res.send('helloworld');
});

// app.get(
//   '/api/forsale',
//   (req, res, next) => {
//     // console.log('forsale');
//     res.json([
//       {
//         id: 1,
//         item_name: 'item1',
//         item_body:
//           'this is an original item1, for sale, low price',
//         item_owner: 'some_guy',
//         item_is: 'selling',
//         item_list: 1
//       },
//       {
//         id: 2,
//         item_name: 'item2',
//         item_body:
//           'this is an original item2, for sale, low price',
//         item_owner: 'another person',
//         item_is: 'selling',
//         item_list: 1
//       }
//     ]);
//   }
// );

// id integer PRIMARY KEY GENERATED BY
//   DEFAULT AS IDENTITY,
//   sender_id integer REFERENCES morkit_user (id) ON DELETE CASCADE NOT NULL,
//   receiver_id integer REFERENCES morkit_user (id) ON DELETE CASCADE NOT NULL,
//   send_time timestamp DEFAULT now() NOT NULL,
//   content text,
//   buy boolean DEFAULT FALSE NOT NULL,
//   check_available boolean DEFAULT FALSE NOT NULL,
//   rsp_buy item_options,
//   rsp_check_available item_options,
//   rsp_content text
// app.get('/api/message', (req, res) => {
//   res.json([
//     {
//       id: 1,
//       sender_name: 'JK Rowling',
//       sender_id: 45,
//       receiver_id: 42,
//       receiver_name: 'Cory T Booker',
//       item_id: 99,
//       item_name: 'Maltese Falcon',
//       send_time: new Date(),
//       content: "I'll outbid everyone",
//       buy: false,
//       check_available: true,
//       rsp_buy: '',
//       rsp_check: '',
//       rsp_both: '',
//       rsp_content: ''
//     },
//     {
//       id: 2,
//       sender_name: 'R Coleman',
//       sender_id: 33,
//       receiver_id: 55,
//       receiver_name: 'Joe Shmo',
//       item_id: 44,
//       item_name: 'butter lettuce',
//       send_time: new Date(),
//       content: 'i need a lot',
//       buy: true,
//       check_available: false,
//       rsp_buy: '',
//       rsp_check: '',
//       rsp_both: '',
//       rsp_content: ''
//     },
//     {
//       id: 1,
//       sender_name: 'Chewwie',
//       sender_id: 77,
//       receiver_id: 88,
//       receiver_name: 'Jaba',
//       item_id: 8,
//       item_name: 'milenium falcons',
//       send_time: new Date(),
//       content: 'are there alot?',
//       buy: true,
//       check_available: true,
//       rsp_buy: '',
//       rsp_check: '',
//       rsp_both: '',
//       rsp_content: ''
//     }
//   ]);
// });

// app.get(
//   '/api/inventory',
//   (req, res) => {
//     res.json({
//       items: [
//         {
//           id: 1,
//           item_name: 'item1',
//           item_body:
//             'this is an original item1, for sale, low price',
//           item_owner: 1,
//           item_is: 'selling',
//           item_list: 2
//         },
//         {
//           id: 2,
//           item_name: 'item2',
//           item_body:
//             'this is an original item1, for sale, low price',
//           item_owner: 1,
//           item_is: 'selling',
//           item_list: 2
//         },
//         {
//           id: 5,
//           item_name: 'item5',
//           item_body:
//             'this is an original item1, for sale, low price',
//           item_owner: 1,
//           item_is: 'selling',
//           item_list: 3
//         },
//         {
//           id: 4,
//           item_name: 'item4',
//           item_body:
//             'this is an original item1, for sale, low price',
//           item_owner: 1,
//           item_is: 'selling',
//           item_list: 4
//         }
//       ],
//       lists: [
//         {
//           id: 1,
//           list_owner: 1,
//           list_name: 'galaxies for sale'
//         },
//         {
//           id: 2,
//           list_owner: 1,
//           list_name:
//             'lightsabers on da cheap'
//         },
//         {
//           id: 4,
//           list_owner: 1,
//           list_name: 'Sith Cloaks'
//         },
//         {
//           id: 3,
//           list_owner: 1,
//           list_name: 'swamp properties'
//         }
//       ]
//     });
//   }
// );

app.use('/api/message', messageRouter);
app.use(
  '/api/inventory',
  inventoryRouter
);
// app.use('/api/user', user-router)
app.use('/api/forsale', forsaleRouter);
app.use('/api/list', listRouter);

app.use(function errorHandler(
  error,
  req,
  res,
  next
) {
  let response;
  if (NODE_ENV === 'production') {
    console.error(error);
    response = {
      error: { message: 'server error' }
    };
  } else {
    console.error(error);
    response = {
      message: error.message,
      error
    };
  }
  res.status(500).json(response);
});

module.exports = app;
